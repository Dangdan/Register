<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	   http://www.springframework.org/schema/aop 
	   http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	   http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<bean id="userDao" class="com.ddd.DAO.Impl.UserDaoImpl"/> 

	<bean id="userManager" class="com.ddd.Service.Impl.UserManagerImpl"></bean>
		<!-- 设值注入 <property name="userDao" ref="userDao"> </property> -->
		
		<!-- 构造注入 <constructor-arg> <ref bean="userDao"/> </constructor-arg> -->
	
	<context:annotation-config/>
	<context:component-scan base-package="com.ddd"/>
	<aop:aspectj-autoproxy />
	<aop:config />
	
	<!-- 这是基于注解的 
		<tx:annotation-driven transaction-manager="txManager"/>
	-->
<!-- 
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/test</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>1234</value>
		</property>
	</bean>
 -->
 	<!-- locations，对应的这个bean里面有个setLocations方法 -->
 	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <value>classpath:jdbc.properties</value>
    </property>
	</bean>

	<!-- ${}占位符，当出现时，去上面这个PropertyPlaceholderConfigurer 里面的locations属性里面的这个文件里面找 -->
	<bean id="dataSource" destroy-method="close"
      class="org.apache.commons.dbcp.BasicDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <!--  这是一个一个写实体类
	    <property name="annotatedClasses">
	      <list>
	        <value>com.ddd.entity.User</value>
	        <value>com.ddd.entity.Log</value>
	      </list>
	    </property>
	    -->
	    <property name="packagesToScan">
	      <list>
	        <value>com.ddd.entity</value>
	      </list>
	    </property>
	    <property name="hibernateProperties">
	    	<props>
	    		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	    		<prop key="hibernate.show_sql">true</prop>
	    		<prop key="hibernate.format_sql">true</prop>
	    	</props>
	    </property>
  </bean>
  <bean name="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  	<property name="sessionFactory" ref="sessionFactory" />
  </bean>
  <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  	<property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <aop:config>
  	<aop:pointcut expression="execution(* com.ddd.Service..*.*(..))" id="transactionPoint"/>
  	<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPoint"/>
  </aop:config>
  
  <tx:advice id="txAdvice" transaction-manager="txManager">
  	<tx:attributes>
  		<tx:method name="exists" read-only="true"/>
  		<tx:method name="add*" propagation="REQUIRED"/>
  	</tx:attributes>
  </tx:advice>
  
</beans>